{"version":3,"sources":["pages/Contact.module.scss","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","pages/Contact.js"],"names":["module","exports","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_objectWithoutProperties","source","excluded","i","target","sourceKeys","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","ownKeys","object","enumerableOnly","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","arguments","forEach","getOwnPropertyDescriptors","defineProperties","Contact","useState","name","email","comment","formState","setFormState","errors","setErrors","validateForm","e","atom","dotAtom","RegExp","test","otherErrors","Page","style","styles","title","className","container","Card","id","onSubmit","preventDefault","console","log","labelBlock","htmlFor","error","type","autoComplete","defaultValue","onBlur","invalidField"],"mappings":"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","file":"static/js/6.12a61ec3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Contact\":\"Contact_Contact__3aqpJ\",\"container\":\"Contact_container__3806I\",\"labelBlock\":\"Contact_labelBlock__3pI5o\",\"invalidField\":\"Contact_invalidField__Nq7d9\",\"error\":\"Contact_error__2s1ff\"};","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import React, { useState } from 'react';\n\nimport Card from 'components/Card';\n\nimport Page from './Page';\nimport styles from './Contact.module.scss';\n\nexport default function Contact() {\n  const [formState, setFormState] = useState({\n    name: '',\n    email: '',\n    comment: '',\n  });\n  const [errors, setErrors] = useState({});\n  const { name, email, comment } = formState;\n\n  function validateForm(e) {\n    switch (e.target.name) {\n      case 'email': {\n        const atom = \"[a-zA-Z0-9!#$%&'*+\\\\-/=?^_`{|}~]\"; // https://tools.ietf.org/html/rfc5322#section-3.2.3\n        const dotAtom = `${atom}+(.?${atom}+)*`; // I think I'm reading the definition of \"dot-atom-text\" correctly\n        const re = new RegExp(`^${dotAtom}@${dotAtom}$`);\n        if (!re.test(e.target.value)) {\n          setErrors({ ...errors, email: 'Invalid email address.' });\n        } else {\n          const { email, ...otherErrors } = errors;\n          setErrors({ ...otherErrors });\n        }\n        break;\n      }\n      case 'name': {\n        if (!e.target.value.length) {\n          setErrors({ ...errors, name: 'Name cannot be blank.' });\n        } else {\n          const { name, ...otherErrors } = errors;\n          setErrors({ ...otherErrors });\n        }\n        break;\n      }\n      case 'comment':\n      default: {\n        if (!e.target.value.length) {\n          setErrors({ ...errors, comment: 'Comment cannot be blank.' });\n        } else {\n          const { comment, ...otherErrors } = errors;\n          setErrors({ ...otherErrors });\n        }\n        break;\n      }\n    }\n    if (Object.keys(errors).length < 1)\n      setFormState({ ...formState, [e.target.name]: e.target.value });\n  }\n\n  function submitForm(e) {\n    e.preventDefault();\n    if (Object.keys(errors).length > 0) return;\n    // TODO: actual form submission\n    console.log('Submission data:', formState);\n  }\n\n  return (\n    <Page style={styles.Contact} title=\"~gminteer/contact\">\n      <div className={styles.container}>\n        <Card>\n          <form id=\"comment\" onSubmit={submitForm}>\n            <div className={styles.labelBlock}>\n              <label htmlFor=\"name\">Your name</label>\n              {errors.name && (\n                <span className={styles.error}>{errors.name}</span>\n              )}\n            </div>\n            <input\n              type=\"text\"\n              id=\"name\"\n              name=\"name\"\n              autoComplete=\"name\"\n              defaultValue={name}\n              onBlur={validateForm}\n              className={errors.name ? styles.invalidField : ''}\n            />\n            <div className={styles.labelBlock}>\n              <label htmlFor=\"email\">Email</label>\n              {errors.email && (\n                <span className={styles.error}>{errors.email}</span>\n              )}\n            </div>\n            <input\n              type=\"email\"\n              id=\"email\"\n              name=\"email\"\n              autoComplete=\"email\"\n              defaultValue={email}\n              onBlur={validateForm}\n              className={errors.email ? styles.invalidField : ''}\n            />\n            <div className={styles.labelBlock}>\n              <label htmlFor=\"comment\">Comment</label>\n              {errors.comment && (\n                <span className={styles.error}>{errors.comment}</span>\n              )}\n            </div>\n            <textarea\n              id=\"comment\"\n              name=\"comment\"\n              onBlur={validateForm}\n              defaultValue={comment}\n              className={errors.comment ? styles.invalidField : ''}\n            />\n            <button type=\"submit\">Submit</button>\n          </form>\n        </Card>\n      </div>\n    </Page>\n  );\n}\n"],"sourceRoot":""}