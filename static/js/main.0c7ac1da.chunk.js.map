{"version":3,"sources":["components/About.module.scss","assets/img lazy /^/.//.*$/ groupOptions: {} namespace object","components/Navigation.module.scss","components/Header.module.scss","components/Footer.module.scss","components/Navigation.js","components/Header.js","components/Footer.js","components/About.js","components/Project.js","components/Gallery.js","components/Contact.js","components/Tree.js","components/Resume.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","tabs","setCurrentTab","className","styles","Navigation","tab","index","key","href","toLowerCase","onClick","props","Header","Footer","data","item","name","About","useState","img","setImg","useEffect","a","imgData","default","getImg","src","alt","title","body","blurb","Project","project","tag","projects","htmlFor","type","autoComplete","Tree","children","child","treeData","ContentComponents","about","Gallery","contact","Contact","resume","Resume","App","currentTab","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0c7ac1da.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"About\":\"About_About__vpEfE\",\"title\":\"About_title__HSdgc\",\"body\":\"About_body__b_kAR\"};","var map = {\n\t\"./headshot.jpg\": [\n\t\t24,\n\t\t3\n\t],\n\t\"./lyric-look-up.jpg\": [\n\t\t25,\n\t\t4\n\t],\n\t\"./pair-pro.jpg\": [\n\t\t26,\n\t\t5\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 7;\nmodule.exports = webpackAsyncContext;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navigation\":\"Navigation_Navigation__3dlVY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__3v0KW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Footer\":\"Footer_Footer__1yZ4j\"};","import React from 'react';\n\nimport styles from './Navigation.module.scss';\n\nexport default ({ tabs, setCurrentTab }) => (\n  <nav className={styles.Navigation}>\n    <ul>\n      {tabs.map((tab, index) => (\n        <li key={index}>\n          <h2>\n            <a\n              href={`#${tab.toLowerCase()}`}\n              onClick={() => setCurrentTab(tab)}\n            >\n              {tab}\n            </a>\n          </h2>\n        </li>\n      ))}\n    </ul>\n  </nav>\n);\n","import React from 'react';\nimport Navigation from 'components/Navigation';\n\nimport styles from './Header.module.scss';\n\nexport default (props) => (\n  <header className={styles.Header}>\n    <h1>~gminteer/ $</h1>\n    <Navigation {...props} />\n  </header>\n);\n","import React from 'react';\n\nimport data from 'assets/data/footer.json';\nimport styles from './Footer.module.scss';\n\nexport default () => (\n  <footer className={styles.Footer}>\n    <ul>\n      {data.map((item, index) => (\n        <li key={index}>\n          <a href={item.href}>{item.name}</a>\n        </li>\n      ))}\n    </ul>\n  </footer>\n);\n","import React, { useState, useEffect } from 'react';\n\nimport data from 'assets/data/about.json';\nimport styles from './About.module.scss';\n\nexport default function About() {\n  const [img, setImg] = useState();\n\n  useEffect(() => {\n    async function getImg() {\n      const imgData = await import(`assets/img/${data.img}`);\n      setImg(imgData.default);\n    }\n    getImg();\n  }, [img]);\n\n  return (\n    <main className={styles.About}>\n      <figure>\n        <img src={img} alt={data.name} />\n        <figcaption>\n          <div className={styles.title}>\n            <h3>{data.name}</h3>\n          </div>\n          <div className={styles.body}>\n            <p>{data.blurb}</p>\n          </div>\n        </figcaption>\n      </figure>\n    </main>\n  );\n}\n","import React, { useState, useEffect } from 'react';\n\nexport default function Project({ project }) {\n  const [img, setImg] = useState();\n\n  useEffect(() => {\n    async function getImg() {\n      const imgData = await import(`assets/img/${project.img}`);\n      setImg(imgData.default);\n    }\n    getImg();\n  }, [project.img, img]);\n\n  return (\n    <div>\n      <figure>\n        <figcaption>\n          <h3>{project.name}</h3>\n          <p>{project.tag}</p>\n        </figcaption>\n        <img src={img} alt={`${project.name} in action`} />\n      </figure>\n    </div>\n  );\n}\n","import React from 'react';\n\nimport Project from 'components/Project';\nimport projects from 'assets/data/projects.json';\n\nexport default () => (\n  <main>\n    {projects.map((project, index) => (\n      <Project project={project} key={index} />\n    ))}\n  </main>\n);\n","import React from 'react';\n\nexport default () => (\n  <main>\n    <form id=\"comment\">\n      <label htmlFor=\"name\">Your name</label>\n      <input type=\"text\" id=\"name\" name=\"name\" autoComplete=\"name\" />\n      <label htmlFor=\"email\">Email</label>\n      <input type=\"email\" id=\"email\" name=\"email\" autoComplete=\"email\" />\n      <label htmlFor=\"comment\">Comment</label>\n      <textarea id=\"comment\" name=\"comment\" />\n      <button type=\"submit\">Submit</button>\n    </form>\n  </main>\n);\n","import React from 'react';\n\nexport default function Tree({ data }) {\n  return (\n    <ul>\n      <li>{data.name}</li>\n      {data.children &&\n        data.children.map((child, index) => <Tree data={child} key={index} />)}\n    </ul>\n  );\n}\n","import React from 'react';\n\nimport Tree from 'components/Tree';\nimport treeData from 'assets/data/tree.json';\nimport data from 'assets/data/resume.json';\n\nexport default () => (\n  <main>\n    <h3>\n      <a href={data.href}>View full resume here</a>\n    </h3>\n    <section>\n      <Tree data={treeData} />\n    </section>\n  </main>\n);\n","import React, { useState } from 'react';\n\nimport Header from 'components/Header';\nimport Footer from 'components/Footer';\nimport About from 'components/About';\nimport Gallery from 'components/Gallery';\nimport Contact from 'components/Contact';\nimport Resume from 'components/Resume';\n\nconst ContentComponents = {\n  about: <About />,\n  projects: <Gallery />,\n  contact: <Contact />,\n  resume: <Resume />,\n};\n\nfunction App() {\n  const tabs = Object.keys(ContentComponents);\n  const [currentTab, setCurrentTab] = useState(tabs[0]);\n  const props = { tabs, currentTab, setCurrentTab };\n\n  return (\n    <>\n      <Header {...props} />\n      {ContentComponents[currentTab]}\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'styles/index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}